-- Migration: Create themes table for Layout Architect (Phase 2)
-- Description: Stores presentation themes generated by Layout Architect
-- Date: 2024-01-01

-- Create themes table
CREATE TABLE IF NOT EXISTS themes (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    session_id TEXT NOT NULL REFERENCES sessions(id) ON DELETE CASCADE,
    theme_spec JSONB NOT NULL,
    created_at TIMESTAMPTZ DEFAULT TIMEZONE('utc', NOW()),
    updated_at TIMESTAMPTZ DEFAULT TIMEZONE('utc', NOW()),
    UNIQUE(session_id)
);

-- Create index on session_id for faster lookups
CREATE INDEX idx_themes_session_id ON themes(session_id);

-- Add trigger to update the updated_at timestamp
CREATE OR REPLACE FUNCTION update_themes_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = TIMEZONE('utc', NOW());
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER themes_updated_at_trigger
    BEFORE UPDATE ON themes
    FOR EACH ROW
    EXECUTE FUNCTION update_themes_updated_at();

-- Add comment on table
COMMENT ON TABLE themes IS 'Stores presentation themes generated by Layout Architect agent';

-- Add comments on columns
COMMENT ON COLUMN themes.id IS 'Unique identifier for the theme';
COMMENT ON COLUMN themes.session_id IS 'Reference to the session this theme belongs to';
COMMENT ON COLUMN themes.theme_spec IS 'Complete theme specification including colors, typography, and layouts';
COMMENT ON COLUMN themes.created_at IS 'Timestamp when the theme was created';
COMMENT ON COLUMN themes.updated_at IS 'Timestamp when the theme was last updated';